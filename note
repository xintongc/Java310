介绍
    落地-持久化
        这个数据。不跟随你的程序重启而丢失。数据是保存在可以永久保存的存储介质上。（文件、数据库）
    数据库   
        什么是？
            应用程序
            帮助你用文件存储
        类型
            关系型数据库（SQL）(事务性强)
                mysql/postgress
                    类似于excel二维表
                        姓名|年龄|性别
                        赵哲|29|男
            NoSQL非关系型数据库（海量数据）
                列式存储（Hbase）（html）-> url: html:timestamp/version
                    {
                        key:key,
                        columFamliy:{
                            qua:XXXXX
                        }
                    }
                文档型数据库（MongoDB）（Html）
                    {
                        objectId:XXXX,
                        key:value
                    }
        Driver
            什么？
                帮助你建立 Connection
                并且提供关于数据库的基本API     
            什么样？
                public void connect()
                public String query(String sql)
            哪些driver
                JDBC
        ORM
            什么 ?
                对象关系映射 
            干什么？
                把查询变成 SQL
                把数据库的结果 变成对象
            什么样？
                public Student getStudentById(Integer id)
                    -> select * from student where id = 'id'(SQL)
                        -> student result String(return from DB)//先按照String理解
                            -> reflect to Student(Java Instance)
                应用接口（中国话）     Driver（翻译SQL）       DB（英语）
对象 -> ORM ->  SQL 
    安装MySQL
        1.docker -> kitematic
            1.new mysql 实例
            2.实例的setting 增加环境变量 
                MYSQL_ALLOW_EMPTY_PASSWORD true
            3.重启实例 restart
            4.点击exec 打开终端
            5.mysql -u root -p 回车 再回车
                mysql -h124.42.118.102 -uroot -P33360 -p
                -h 主机 -u 用户 -P 端口 -p 使用密码
            6. 
                -> use mysql;//进入mysql
                -> update user set host = '%' where user = 'root';//修改权限，表明root用户可以由外网访问
                -> flush privileges; //立即生效
            7.打开workbench 左上角Connection "+"号 新建连接
                输入账号/密码（目前docker是空） 端口
            8.新建schema (新建一个数据库，表的集合)
                （2种方式）
                1.通过workbench鼠标点选
                2.直接敲命令行 CREATE DATABASE `zz` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
            9.创建表
            CREATE TABLE `zzdb`.`moment` (
              `id` INT NOT NULL AUTO_INCREMENT,
              `title` VARCHAR(45) NULL,
              `content` VARCHAR(100) NULL,
              PRIMARY KEY (`id`));
            10.主键
                用来区分一个表里不同数据的东西就叫主键
            11.更新数据
                UPDATE `zzdb`.`moment` SET `content`='赵哲的content2' WHERE `id`='1';
    1. 更新pom加入依赖
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.38</version>
        </dependency>
    2. 在resource文件夹下增加application.properties文件
    spring.datasource.url=jdbc:mysql://localhost:32771/zzdb?useUnicode=true&characterEncoding=utf-8
    spring.datasource.username=root
    spring.datasource.password=
    spring.datasource.testWhileIdle=true
    spring.datasource.validationQuery=SELECT 1
    spring.jpa.show-sql=true
    spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
